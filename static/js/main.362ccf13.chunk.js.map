{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/OMDb.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getInfo","fetch","then","response","json","FindMovie","addMovie","useState","searchTitle","setSearchTitle","foundMovie","setFoundMovie","notFound","setNotFound","showPreview","setShowPreview","canAddMovie","setCanAddMovie","searchMovie","a","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","autoComplete","htmlFor","type","id","placeholder","CN","input","value","onChange","target","disabled","onClick","App","data","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.362ccf13.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL_API = 'https://www.omdbapi.com/';\n\nexport function getInfo(title) {\n  return fetch(`${URL_API}?apikey=d905f6c1&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport CN from 'classnames';\nimport { MovieCard } from '../MovieCard';\n\nimport { getInfo } from '../../api/OMDb';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [searchTitle, setSearchTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [canAddMovie, setCanAddMovie] = useState(false);\n\n  const searchMovie = async(title) => {\n    const movie = await getInfo(title);\n\n    if (movie.Response === 'False') {\n      setNotFound(true);\n      setShowPreview(false);\n      setCanAddMovie(false);\n    } else {\n      setFoundMovie({\n        title: movie.Title,\n        description: movie.Plot,\n        imgUrl: movie.Poster,\n        imdbUrl:\n          `https://www.imdb.com/title/${movie.imdbID}`,\n        imdbId: movie.imdbID,\n      });\n      setNotFound(false);\n      setShowPreview(true);\n      setCanAddMovie(true);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          searchMovie(searchTitle);\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={CN({\n                input: true,\n                'is-danger': notFound,\n              })}\n              value={searchTitle}\n              onChange={(event) => {\n                setSearchTitle(event.target.value);\n                setNotFound(false);\n              }}\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-light\">\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!canAddMovie}\n              onClick={() => {\n                addMovie(foundMovie);\n                setShowPreview(false);\n                setCanAddMovie(false);\n                setSearchTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {showPreview && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addToList = (newMovie) => {\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addToList} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}